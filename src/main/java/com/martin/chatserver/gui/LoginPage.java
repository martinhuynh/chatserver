package com.martin.chatserver.gui;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class LoginPage extends Page {
    private JPanel panel;
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton registerButton;
    private JButton loginButton;

    public LoginPage(PageManager pageManager) {
        super(pageManager);
        initLoginButton();
        initRegisterButton();
        setLayout(new GridLayout());
        add(panel);
    }

    private void initRegisterButton() {
        registerButton.addActionListener((action) -> pageManager.setPage(Pages.REGISTER));
    }

    private void initLoginButton() {
        loginButton.addActionListener((action) -> pageManager.setPage(Pages.CHAT));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 33, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalTextPosition(11);
        label1.setText("Chat Program");
        label1.setVerticalAlignment(0);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.gridheight = 2;
        gbc.weightx = 0.02;
        gbc.weighty = 0.04;
        gbc.anchor = GridBagConstraints.SOUTH;
        gbc.ipady = 20;
        panel.add(label1, gbc);
        usernameField = new JTextField();
        usernameField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weightx = 0.02;
        gbc.weighty = 0.04;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipady = 7;
        panel.add(usernameField, gbc);
        passwordField = new JPasswordField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.weightx = 0.02;
        gbc.weighty = 0.04;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipady = 7;
        panel.add(passwordField, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Username");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 0.02;
        gbc.weighty = 0.02;
        gbc.anchor = GridBagConstraints.SOUTHWEST;
        gbc.insets = new Insets(0, 5, 0, 0);
        panel.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Password");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        gbc.weightx = 0.02;
        gbc.weighty = 0.02;
        gbc.anchor = GridBagConstraints.SOUTHWEST;
        gbc.insets = new Insets(0, 5, 0, 0);
        panel.add(label3, gbc);
        registerButton = new JButton();
        registerButton.setAlignmentX(0.2f);
        registerButton.setAlignmentY(0.5f);
        registerButton.setBorderPainted(true);
        registerButton.setContentAreaFilled(true);
        registerButton.setDoubleBuffered(false);
        registerButton.setEnabled(true);
        registerButton.setHideActionText(false);
        registerButton.setInheritsPopupMenu(false);
        registerButton.setText("Register");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weightx = 0.05;
        gbc.weighty = 0.05;
        gbc.fill = GridBagConstraints.BOTH;
        panel.add(registerButton, gbc);
        loginButton = new JButton();
        loginButton.setAlignmentX(0.2f);
        loginButton.setAlignmentY(0.5f);
        loginButton.setBorderPainted(true);
        loginButton.setContentAreaFilled(true);
        loginButton.setDoubleBuffered(false);
        loginButton.setEnabled(true);
        loginButton.setHideActionText(false);
        loginButton.setInheritsPopupMenu(false);
        loginButton.setText("Login");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.weightx = 0.05;
        gbc.weighty = 0.05;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipadx = 12;
        panel.add(loginButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 200, 0, 0);
        panel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 200, 0, 0);
        panel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(0, 0, 120, 0);
        panel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(120, 0, 0, 0);
        panel.add(spacer4, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
